# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: MeloMerge

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      deploy_to_production:
        description: 'Deploy to Production? (true/false)'
        required: true
        default: 'false'
jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          clean: false
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.staging', '.env');"
        working-directory: api
      - name: Delete .env.production and .env.development
        run: rm -f .env.production .env.development
        working-directory: api
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
        working-directory: api
      #- run: npm test
      - run: npm run build --if-present
        working-directory: api
  production:
    runs-on: [self-hosted, production]

    strategy:
      matrix:
        node-version: [ 18.x ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    if: github.ref == 'refs/heads/main' && github.event.inputs.deploy_to_production == 'true'
    steps:
      - uses: actions/checkout@v3
        with:
          clean: false
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.production', '.env');"
        working-directory: api
      - name: Delete .env.staging and .env.development
        run: rm -f .env.staging .env.development
        working-directory: api
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
        working-directory: api
      #- run: npm test
      - run: npm run build --if-present
        working-directory: api