name: MeloMerge Api

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      deploy_to_production:
        description: 'Deploy to Production? (true/false)'
        required: true
        default: 'false'

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: GCWazeem@1988
          MYSQL_DATABASE: melomerge_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=10
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none
      - uses: actions/checkout@v3
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"
        working-directory: api
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        working-directory: api
      - name: Clear the old cache
        run: php artisan clear-compiled
        working-directory: api
      - name: Config cache
        run: php artisan config:cache
        working-directory: api
      - name: Run Storage Link Command
        run: php artisan storage:link
        working-directory: api
      - name: Run database migrations
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: melomerge_test
          DB_USER: root
          DB_PASSWORD: GCWazeem@1988
          DB_ENGINE: InnoDB
        run: php artisan migrate --force
        working-directory: api
      - name: Directory Permissions
        run: sudo chmod -R 777 storage bootstrap/cache
        working-directory: api
      - name: www-data directory ownership
        run: sudo chown -R www-data:www-data .
        working-directory: api
      - name: Setting permissions for storage
        run: sudo chmod -R 775 storage
        working-directory: api
      - name: Testing
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: melomerge_test
          DB_USER: root
          DB_PASSWORD: GCWazeem@1988
          DB_ENGINE: InnoDB
        run: sudo php artisan test
        working-directory: api
  deploy:
    needs: build
    runs-on: [self-hosted, production]
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main' && github.event.inputs.deploy_to_production != 'true'
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none
      - uses: actions/checkout@v3
        with:
          clean: false
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.staging', '.env');"
        working-directory: api
      - name: Install Dependencies
        run: export COMPOSER_HOME=/home/$USER/.composer && composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        working-directory: api
      - name: Clear the old cache
        run: php artisan clear-compiled
        working-directory: api
      - name: Recreate cache
        run: php artisan optimize
        working-directory: api
      - name: Recreate config cache
        run: php artisan config:cache
        working-directory: api
      - name: Run Misc Commands
        run: php artisan storage:link
        working-directory: api
      - name: Run database migrations
        run: php artisan migrate --force
        working-directory: api
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
        working-directory: api
      - name: www-data directory ownership
        run: chown -R www-data:www-data .
        working-directory: api
      - name: Setting permissions for storage
        run: chmod -R 775 storage
        working-directory: api
      - name: Create PHPMyAdmin Symlink
        run: sudo ln -sf /usr/share/phpmyadmin public/phpadmin
        working-directory: api
  production-deploy:
    needs: build
    runs-on: [self-hosted, deploy_production]
    if: github.ref == 'refs/heads/main' && github.event.inputs.deploy_to_production == 'true'
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none
      - uses: actions/checkout@v3
        with:
          clean: false
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.production', '.env');"
        working-directory: api
      - name: Install Dependencies
        run: export COMPOSER_HOME=/home/$USER/.composer && composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        working-directory: api
      - name: Clear the old cache
        run: php artisan clear-compiled
        working-directory: api
      - name: Recreate cache
        run: php artisan optimize
        working-directory: api
      - name: Recreate config cache
        run: php artisan config:cache
        working-directory: api
      - name: Run Misc Commands
        run: php artisan storage:link
        working-directory: api
      - name: Run database migrations
        run: php artisan migrate --force
        working-directory: api
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
        working-directory: api
      - name: www-data directory ownership
        run: chown -R www-data:www-data .
        working-directory: api
      - name: Setting permissions for storage
        run: chmod -R 775 storage
        working-directory: api
      - name: Create PHPMyAdmin Symlink
        run: sudo ln -sf /usr/share/phpmyadmin public/phpadmin
        working-directory: api